name: Windows Build & Release

on:
  workflow_dispatch:
  push:
    tags: ["v*.*.*"]

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Show tree
        shell: powershell
        run: |
          Get-Location
          Get-ChildItem -Force
          if (Test-Path docs) { Get-ChildItem docs -Force }
          if (Test-Path assets) { Get-ChildItem assets -Force }

      - name: Install deps
        shell: powershell
        run: |
          python -m pip install --upgrade pip
          if (!(Test-Path docs\requirements.txt)) { throw "Missing docs\requirements.txt" }
          pip install -r docs\requirements.txt
          pip install pyinstaller
          
      - name: Build EXE (PyInstaller)
        shell: powershell
        run: |
          $args = @(
            '-m','PyInstaller',
            '--clean','--noconfirm','--windowed',
            '--name','StegoCrypt',
            '--collect-submodules=cv2',
            '--collect-submodules=Crypto',
            '--collect-all=PIL'
          )

          if (Test-Path 'assets\stegocrypt.ico') {
            $args += @('--icon','assets\stegocrypt.ico')
          }

          $args += @('main.py')

          # Invoke: python -m PyInstaller <args...>
          & python $args
          if ($LASTEXITCODE -ne 0) { throw "PyInstaller failed with exit code $LASTEXITCODE" }

          Get-ChildItem dist\StegoCrypt -Force




      - name: Install Inno Setup
        shell: powershell
        run: choco install innosetup --yes

      - name: Build installer (Inno Setup)
        shell: powershell
        run: |
          # Sanity checks
          if (!(Test-Path installer\StegoCrypt.iss)) { throw "Missing installer\StegoCrypt.iss" }
          if (!(Test-Path dist\StegoCrypt\StegoCrypt.exe)) {
            Write-Host "PyInstaller output missing. dist contents:"
            Get-ChildItem dist -Recurse -Force | Out-Host
            throw "Expected dist\StegoCrypt\StegoCrypt.exe"
          }

          # Derive version from tag (strip leading v). Fallback to 0.0.0 for non-tag runs.
          $tag = "${{ github.ref_name }}"
          $ver = ($tag -replace '^v','')
          if (-not $ver -or -not ${{ startsWith(github.ref, 'refs/tags/') }}) { $ver = "0.0.0" }

          # Ensure output dir exists; /O+ sets OutputDir relative to the .iss dir
          New-Item -ItemType Directory -Force -Path installer\Output | Out-Null
          $iscc = "C:\Program Files (x86)\Inno Setup 6\ISCC.exe"

          & $iscc `
            "/DMyAppVersion=$ver" `
            "/O+installer\Output" `
            "installer\StegoCrypt.iss"

          if ($LASTEXITCODE -ne 0) {
            throw "Inno Setup failed with exit code $LASTEXITCODE"
          }

          if (Test-Path installer\Output) {
            Get-ChildItem installer\Output -Force
          } else {
            throw "installer\Output was not created"
          }

      - name: Upload to Release (EXE)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: installer/Output/Windows-StegoCrypt-Setup-*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Upload artifacts (debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-artifacts
          path: |
            dist/**
            build/**
            *.spec
            installer/Output/**
          if-no-files-found: warn
